// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db.db"
}

model Admin {
  id String @id
}

model Award {
  id          Int       @id @default(autoincrement())
  name        String
  requirement String
  recipients  Student[]
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String
  location    String
  start       DateTime
  end         DateTime
  image       String
  points      Int
  isCanceled  Boolean  @default(false)
  reason      String?

  participants       StudentsOnEvents[]
  StudentsOnQuarters StudentsOnQuarters[]
  StudentsOnReports  StudentsOnReports[]
}

model Student {
  id         String  @id
  email      String  @default("default@email.com")
  firstName  String?
  middleName String?
  lastName   String?
  grade      Int?
  bio        String?
  image      String  @default("default.jpg")
  points     Int     @default(0)
  rank       Int?

  awards            Award[]
  events            StudentsOnEvents[]
  quarters          StudentsOnQuarters[]
  StudentsOnReports StudentsOnReports[]
}

model StudentsOnEvents {
  event   Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId Int

  student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
  studentId String

  attended    Boolean @default(false)
  studentName String

  @@id([eventId, studentId])
}

model Quarter {
  id      Int                  @id @default(autoincrement())
  winners StudentsOnQuarters[]
}

model StudentsOnQuarters {
  Quarter   Quarter @relation(fields: [quarterId], references: [id], onDelete: Cascade)
  quarterId Int

  student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
  studentId String

  studentName String
  place       Int
  claimed     Boolean

  Event   Event? @relation(fields: [eventId], references: [id])
  eventId Int?

  @@id([quarterId, studentId])
}

model Report {
  id                Int                 @id @default(autoincrement())
  date              DateTime
  StudentsOnReports StudentsOnReports[]
}

model StudentsOnReports {
  Report   Report @relation(fields: [reportId], references: [id], onDelete: Cascade)
  reportId Int

  student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
  studentId String

  studentName String
  points      Int
  rank        Int

  Event   Event? @relation(fields: [eventId], references: [id])
  eventId Int?

  @@id([reportId, studentId])
}

model News {
  id          Int      @id @default(autoincrement())
  name        String
  datetime    DateTime
  description String
}

model Rally {
  id       Int      @id @default(autoincrement())
  datetime DateTime
}
